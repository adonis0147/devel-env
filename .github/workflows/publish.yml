name: Publish

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        run: |
          cd toolchain
          docker build --platform=linux/x86-64 -t toolchain .
          mkdir output
          docker run --platform=linux/x86-64 --rm --mount type=bind,source="$(pwd)/output",target=/output toolchain

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: toolchain
          path: toolchain/output/install_toolchain.sh

  publish:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download
        uses: actions/download-artifact@v3
        with:
          name: toolchain
          path: output

      - name: Generate the release note
        id: read_release
        shell: bash
        run: |
          TAG_NAME=${{ github.ref }}
          echo "TAG_NAME=${TAG_NAME#refs/tags/}" >> $GITHUB_ENV
          md5="$(md5sum output/install_toolchain.sh | awk '{print $1}')"
          sha256="$(sha256sum output/install_toolchain.sh | awk '{print $1}')"
          body="$(cat .github/templates/release.md | sed "s/MD5_CHECKSUMS/${md5}/;s/SHA256_CHECKSUMS/${sha256}/")"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo "::set-output name=RELEASE_BODY::${body}"

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: output/install_toolchain.sh
          overwrite: true
          release_name: devel-env ${{ env.TAG_NAME }}
          body: |
            ${{ steps.read_release.outputs.RELEASE_BODY }}
